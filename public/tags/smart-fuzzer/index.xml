<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Smart-Fuzzer on Pwn the world.</title>
    <link>https://hexterisk.com/blog/tags/smart-fuzzer/</link>
    <description>Recent content in Smart-Fuzzer on Pwn the world.</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>hexterisk@gmail.com (Bhanupratap Singh)</managingEditor>
    <webMaster>hexterisk@gmail.com (Bhanupratap Singh)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 01 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://hexterisk.com/blog/tags/smart-fuzzer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Approaches</title>
      <link>https://hexterisk.com/blog/posts/2021/01/01/approaches/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><author>hexterisk@gmail.com (Bhanupratap Singh)</author>
      <guid>https://hexterisk.com/blog/posts/2021/01/01/approaches/</guid>
      <description>&lt;p&gt;Fuzzing can be segregated into different types based on the facet of the process we look at.&lt;/p&gt;&#xA;&lt;p&gt;Â &lt;/p&gt;&#xA;&lt;h2 id=&#34;program-structure&#34;&gt;Program Structure&lt;/h2&gt;&#xA;&lt;p&gt;Knowledge of the internals of the target application directly results into maintaining a certain structure to the fuzzing process, which can result into achieving a higher code coverage in a shorter span of time. This results in a much more effective fuzzing exercise.&lt;/p&gt;&#xA;&lt;h3 id=&#34;blackbox-fuzzing&#34;&gt;Blackbox Fuzzing&lt;/h3&gt;&#xA;&lt;p&gt;This approach involves the assumption that the target is a black box since we don&amp;rsquo;t have any knowledge of the internal behavior, source code or the implementation of the target application, hence the name.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

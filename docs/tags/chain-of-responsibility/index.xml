<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chain-of-Responsibility on Pwn the world.</title>
    <link>https://hexterisk.com/blog/tags/chain-of-responsibility/</link>
    <description>Recent content in Chain-of-Responsibility on Pwn the world.</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>hexterisk@gmail.com (Bhanupratap Singh)</managingEditor>
    <webMaster>hexterisk@gmail.com (Bhanupratap Singh)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 16 Aug 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://hexterisk.com/blog/tags/chain-of-responsibility/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Behavioral Patterns</title>
      <link>https://hexterisk.com/blog/posts/2021/08/16/behavioral-patterns/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate><author>hexterisk@gmail.com (Bhanupratap Singh)</author>
      <guid>https://hexterisk.com/blog/posts/2021/08/16/behavioral-patterns/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Behavioral Design Patterns&lt;/strong&gt; are concerned with optimizing the complex flow of control and communication between objects during run-time. Their main goal is to assign responsibilities between objects in a manner that ensures loose coupling.&lt;/p&gt;&#xA;&lt;h4 id=&#34;behavioral-class-patterns&#34;&gt;Behavioral Class Patterns&lt;/h4&gt;&#xA;&lt;p&gt;Inheritance is employed to distribute behavior between classes.&lt;/p&gt;&#xA;&lt;h4 id=&#34;behavioral-object-patterns&#34;&gt;Behavioral Object Patterns&lt;/h4&gt;&#xA;&lt;p&gt;Composition is employed to characterize how a group of objects work with each other to perform a task that cannot be accomplished by a single object.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
